# Use MANIFEST if you want meta-vivint to point to something other than develop.xml (don't include the ".xml")
#MANIFEST=develop
MANIFEST=localrepo

# Use the GIT_OE env variables to pull from a different openembedded repo (i.e. file://path_to_repo)
GIT_OE_SERVER=ssh://git@source.vivint.com:7999/em/openembed
GIT_OE_BRANCH=develop

#GIT_OE_SERVER=/home/localRepos/openembed
#GIT_OE_BRANCH=develop

# You will need to update the BRANCH variable to the name of the branch you want to build
GIT_APPS_SERVER=git@source.vivint.com:7999/em
GIT_APPS_PROTOCOL=ssh
GIT_APPS_BRANCH=develop

#GIT_APPS_SERVER=/home/localRepos
#GIT_APPS_BRANCH=develop
#GIT_APPS_PROTOCOL=file

# These can be used to set the version for your build output
# Use SLIMLINE_VERSION for Yocto builds and BUILD_REVISION_2GIG for touchlink builds
# Better yet set BUILD_REVISION to be the XX.X part of 3.XX.X and have SLIMLINE_VERSION follow it

BUILD_REVISION_2GIG=10.14.featurebv
SLIMLINE_VERSION=3.${BUILD_REVISION_2GIG}

# custom deploy dir. If not set it will install under $SLIMLINE_VERSION directory
DEPLOY_DIR=3.10.14.featurebv

# Name to put under for URL update
UPDATE_DIR=featurebv

# Build what now
BUILD_WALLSLY=TRUE
#BUILD_GLANCE=TRUE
#BUILD_M_KIT=TRUE

# overide build number
BUILD_REV=00001

# This is for forwarding X to the host which is useful for debugging OE and Yocto with the devshell
# Tested on Ubuntu Linux. To make this work you need to bind mount X11 when you run the container.
# Like this >>>  $ docker run -it --env-file develop.env -v <host_path>:/home/workdir -v <host_path>:/home/localRepos -v /tmp/.X11-unix:/tmp/.X11-unix vivint/touchlink:v2 /bin/bash
DISPLAY=:0
